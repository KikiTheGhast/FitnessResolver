name: Tauri 2 Multi-Platform Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # 其他平台配置保持不变...
          - os: ubuntu-latest
            target: aarch64-linux-android
            artifact-name: android
            output-path: src-tauri/target/aarch64-linux-android/release/bundle/
            dependencies: >
              openjdk-17-jdk build-essential
            ndk-version: 26.1.10909125
            ndk-api-level: 34  # 仅保留API级别数字，去掉"android-"前缀

    steps:
      # 其他步骤保持不变...

      - name: Configure Android linker for Rust
        if: matrix.target == 'aarch64-linux-android'
        run: |
          export NDK_HOME=$ANDROID_HOME/ndk/${{ matrix.ndk-version }}
          # 修正链接器路径：使用 "aarch64-linux-android${API级别}-clang" 格式
          echo "[target.aarch64-linux-android]" > $CARGO_HOME/config.toml
          echo "linker = '$NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android${{ matrix.ndk-api-level }}-clang'" >> $CARGO_HOME/config.toml
          cat $CARGO_HOME/config.toml

      - name: Build Tauri app
        run: npx tauri build --target ${{ matrix.target }}
        env:
          NDK_HOME: ${{ matrix.target == 'aarch64-linux-android' && format('{0}/ndk/{1}', env.ANDROID_HOME, matrix.ndk-version) || '' }}
          # 安卓构建需要指定API级别
          TAURI_ANDROID_API_LEVEL: ${{ matrix.ndk-api-level }}
